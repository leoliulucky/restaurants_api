package com.benxiaopao.provider.dao.map;

import com.benxiaopao.provider.dao.model.UserLoginFailure;
import com.benxiaopao.provider.dao.model.UserLoginFailureExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserLoginFailureMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @SelectProvider(type=UserLoginFailureSqlProvider.class, method="countByExample")
    long countByExample(UserLoginFailureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @DeleteProvider(type=UserLoginFailureSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserLoginFailureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @Delete({
        "delete from user_login_failure",
        "where userId = #{userId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @Insert({
        "insert into user_login_failure (userId, attemptTimes, ",
        "lastAttemped, lastLocked, ",
        "lastLoginIP)",
        "values (#{userId,jdbcType=INTEGER}, #{attemptTimes,jdbcType=INTEGER}, ",
        "#{lastAttemped,jdbcType=TIMESTAMP}, #{lastLocked,jdbcType=TIMESTAMP}, ",
        "#{lastLoginIP,jdbcType=BIGINT})"
    })
    int insert(UserLoginFailure record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @InsertProvider(type=UserLoginFailureSqlProvider.class, method="insertSelective")
    int insertSelective(UserLoginFailure record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @SelectProvider(type=UserLoginFailureSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="userId", property="userId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="attemptTimes", property="attemptTimes", jdbcType=JdbcType.INTEGER),
        @Result(column="lastAttemped", property="lastAttemped", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="lastLocked", property="lastLocked", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="lastLoginIP", property="lastLoginIP", jdbcType=JdbcType.BIGINT)
    })
    List<UserLoginFailure> selectByExample(UserLoginFailureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @Select({
        "select",
        "userId, attemptTimes, lastAttemped, lastLocked, lastLoginIP",
        "from user_login_failure",
        "where userId = #{userId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="userId", property="userId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="attemptTimes", property="attemptTimes", jdbcType=JdbcType.INTEGER),
        @Result(column="lastAttemped", property="lastAttemped", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="lastLocked", property="lastLocked", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="lastLoginIP", property="lastLoginIP", jdbcType=JdbcType.BIGINT)
    })
    UserLoginFailure selectByPrimaryKey(Integer userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @UpdateProvider(type=UserLoginFailureSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserLoginFailure record, @Param("example") UserLoginFailureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @UpdateProvider(type=UserLoginFailureSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserLoginFailure record, @Param("example") UserLoginFailureExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @UpdateProvider(type=UserLoginFailureSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserLoginFailure record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_failure
     *
     * @mbg.generated Sun May 05 00:45:08 CST 2019
     */
    @Update({
        "update user_login_failure",
        "set attemptTimes = #{attemptTimes,jdbcType=INTEGER},",
          "lastAttemped = #{lastAttemped,jdbcType=TIMESTAMP},",
          "lastLocked = #{lastLocked,jdbcType=TIMESTAMP},",
          "lastLoginIP = #{lastLoginIP,jdbcType=BIGINT}",
        "where userId = #{userId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserLoginFailure record);

    /**
     * 根据用户Id新增用户尝试登录记录，如果存在则更新尝试登录次数+1
     * @param userId
     * @return
     * @author liupoyang
     */
    @Insert({ "INSERT INTO user_login_failure (userId)",
            "VALUES (#{userId,jdbcType=INTEGER})",
            "ON DUPLICATE KEY UPDATE attemptTimes=attemptTimes+1" })
    int increaseAttemptTimesByUserId(Integer userId);

    /**
     * 根据用户Id更新上次尝试登录IP地址
     * @param userId
     * @param lastLoginIP
     * @return
     * @author liupoyang
     */
    @Update("UPDATE user_login_failure SET lastLoginIP=#{lastLoginIP} WHERE userId=#{userId,jdbcType=INTEGER}")
    int updateLastLoginIPByUserId(@Param("userId") Integer userId, @Param("lastLoginIP") Long lastLoginIP);

    /**
     * 根据用户Id重置用户尝试登录次数
     * @param userId
     * @author liupoyang
     */
    @Update("UPDATE user_login_failure SET attemptTimes=0 WHERE userId=#{userId}")
    int resetAttemptTimesByUserId(Integer userId);

}