package com.benxiaopao.provider.dao.map;

import com.benxiaopao.provider.dao.model.UserLoginIp;
import com.benxiaopao.provider.dao.model.UserLoginIpExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface UserLoginIpMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @SelectProvider(type=UserLoginIpSqlProvider.class, method="countByExample")
    long countByExample(UserLoginIpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @DeleteProvider(type=UserLoginIpSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserLoginIpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @Delete({
        "delete from user_login_ip",
        "where ipId = #{ipId,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer ipId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @Insert({
        "insert into user_login_ip (ipId, userId, ",
        "loginIP, browserType, ",
        "osType, loginAddress, ",
        "loginTime)",
        "values (#{ipId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, ",
        "#{loginIP,jdbcType=BIGINT}, #{browserType,jdbcType=SMALLINT}, ",
        "#{osType,jdbcType=SMALLINT}, #{loginAddress,jdbcType=VARCHAR}, ",
        "#{loginTime,jdbcType=TIMESTAMP})"
    })
    int insert(UserLoginIp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @InsertProvider(type=UserLoginIpSqlProvider.class, method="insertSelective")
    int insertSelective(UserLoginIp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @SelectProvider(type=UserLoginIpSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ipId", property="ipId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="userId", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="loginIP", property="loginIP", jdbcType=JdbcType.BIGINT),
        @Result(column="browserType", property="browserType", jdbcType=JdbcType.SMALLINT),
        @Result(column="osType", property="osType", jdbcType=JdbcType.SMALLINT),
        @Result(column="loginAddress", property="loginAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="loginTime", property="loginTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<UserLoginIp> selectByExample(UserLoginIpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @Select({
        "select",
        "ipId, userId, loginIP, browserType, osType, loginAddress, loginTime",
        "from user_login_ip",
        "where ipId = #{ipId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ipId", property="ipId", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="userId", property="userId", jdbcType=JdbcType.INTEGER),
        @Result(column="loginIP", property="loginIP", jdbcType=JdbcType.BIGINT),
        @Result(column="browserType", property="browserType", jdbcType=JdbcType.SMALLINT),
        @Result(column="osType", property="osType", jdbcType=JdbcType.SMALLINT),
        @Result(column="loginAddress", property="loginAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="loginTime", property="loginTime", jdbcType=JdbcType.TIMESTAMP)
    })
    UserLoginIp selectByPrimaryKey(Integer ipId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @UpdateProvider(type=UserLoginIpSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserLoginIp record, @Param("example") UserLoginIpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @UpdateProvider(type=UserLoginIpSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserLoginIp record, @Param("example") UserLoginIpExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @UpdateProvider(type=UserLoginIpSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(UserLoginIp record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_login_ip
     *
     * @mbg.generated Sun May 05 00:45:31 CST 2019
     */
    @Update({
        "update user_login_ip",
        "set userId = #{userId,jdbcType=INTEGER},",
          "loginIP = #{loginIP,jdbcType=BIGINT},",
          "browserType = #{browserType,jdbcType=SMALLINT},",
          "osType = #{osType,jdbcType=SMALLINT},",
          "loginAddress = #{loginAddress,jdbcType=VARCHAR},",
          "loginTime = #{loginTime,jdbcType=TIMESTAMP}",
        "where ipId = #{ipId,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(UserLoginIp record);
}