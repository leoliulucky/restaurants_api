package com.benxiaopao.provider.dao.map;

import com.benxiaopao.provider.dao.model.Order;
import com.benxiaopao.provider.dao.model.OrderExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface OrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @SelectProvider(type=OrderSqlProvider.class, method="countByExample")
    long countByExample(OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @DeleteProvider(type=OrderSqlProvider.class, method="deleteByExample")
    int deleteByExample(OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @Delete({
        "delete from order_info",
        "where orderId = #{orderId,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @Insert({
        "insert into order_info (orderId, payType, ",
        "totalAmout, realTotalAmout, ",
        "shipmentExpense, orderStatus, ",
        "orderType, orderFrom, ",
        "pOrderId, buyerId, ",
        "consignee, province, ",
        "city, district, ",
        "address, tel, createTime, ",
        "updateTime)",
        "values (#{orderId,jdbcType=VARCHAR}, #{payType,jdbcType=INTEGER}, ",
        "#{totalAmout,jdbcType=DECIMAL}, #{realTotalAmout,jdbcType=DECIMAL}, ",
        "#{shipmentExpense,jdbcType=DECIMAL}, #{orderStatus,jdbcType=SMALLINT}, ",
        "#{orderType,jdbcType=TINYINT}, #{orderFrom,jdbcType=TINYINT}, ",
        "#{pOrderId,jdbcType=VARCHAR}, #{buyerId,jdbcType=INTEGER}, ",
        "#{consignee,jdbcType=VARCHAR}, #{province,jdbcType=INTEGER}, ",
        "#{city,jdbcType=INTEGER}, #{district,jdbcType=INTEGER}, ",
        "#{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @InsertProvider(type=OrderSqlProvider.class, method="insertSelective")
    int insertSelective(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @SelectProvider(type=OrderSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="orderId", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="payType", property="payType", jdbcType=JdbcType.INTEGER),
        @Result(column="totalAmout", property="totalAmout", jdbcType=JdbcType.DECIMAL),
        @Result(column="realTotalAmout", property="realTotalAmout", jdbcType=JdbcType.DECIMAL),
        @Result(column="shipmentExpense", property="shipmentExpense", jdbcType=JdbcType.DECIMAL),
        @Result(column="orderStatus", property="orderStatus", jdbcType=JdbcType.SMALLINT),
        @Result(column="orderType", property="orderType", jdbcType=JdbcType.TINYINT),
        @Result(column="orderFrom", property="orderFrom", jdbcType=JdbcType.TINYINT),
        @Result(column="pOrderId", property="pOrderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="buyerId", property="buyerId", jdbcType=JdbcType.INTEGER),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.INTEGER),
        @Result(column="city", property="city", jdbcType=JdbcType.INTEGER),
        @Result(column="district", property="district", jdbcType=JdbcType.INTEGER),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="tel", property="tel", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updateTime", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<Order> selectByExample(OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @Select({
        "select",
        "orderId, payType, totalAmout, realTotalAmout, shipmentExpense, orderStatus, ",
        "orderType, orderFrom, pOrderId, buyerId, consignee, province, city, district, ",
        "address, tel, createTime, updateTime",
        "from order_info",
        "where orderId = #{orderId,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="orderId", property="orderId", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="payType", property="payType", jdbcType=JdbcType.INTEGER),
        @Result(column="totalAmout", property="totalAmout", jdbcType=JdbcType.DECIMAL),
        @Result(column="realTotalAmout", property="realTotalAmout", jdbcType=JdbcType.DECIMAL),
        @Result(column="shipmentExpense", property="shipmentExpense", jdbcType=JdbcType.DECIMAL),
        @Result(column="orderStatus", property="orderStatus", jdbcType=JdbcType.SMALLINT),
        @Result(column="orderType", property="orderType", jdbcType=JdbcType.TINYINT),
        @Result(column="orderFrom", property="orderFrom", jdbcType=JdbcType.TINYINT),
        @Result(column="pOrderId", property="pOrderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="buyerId", property="buyerId", jdbcType=JdbcType.INTEGER),
        @Result(column="consignee", property="consignee", jdbcType=JdbcType.VARCHAR),
        @Result(column="province", property="province", jdbcType=JdbcType.INTEGER),
        @Result(column="city", property="city", jdbcType=JdbcType.INTEGER),
        @Result(column="district", property="district", jdbcType=JdbcType.INTEGER),
        @Result(column="address", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="tel", property="tel", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="updateTime", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    Order selectByPrimaryKey(String orderId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @UpdateProvider(type=OrderSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Order record, @Param("example") OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @UpdateProvider(type=OrderSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Order record, @Param("example") OrderExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @UpdateProvider(type=OrderSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Order record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table order_info
     *
     * @mbg.generated Sat Apr 20 10:25:29 CST 2019
     */
    @Update({
        "update order_info",
        "set payType = #{payType,jdbcType=INTEGER},",
          "totalAmout = #{totalAmout,jdbcType=DECIMAL},",
          "realTotalAmout = #{realTotalAmout,jdbcType=DECIMAL},",
          "shipmentExpense = #{shipmentExpense,jdbcType=DECIMAL},",
          "orderStatus = #{orderStatus,jdbcType=SMALLINT},",
          "orderType = #{orderType,jdbcType=TINYINT},",
          "orderFrom = #{orderFrom,jdbcType=TINYINT},",
          "pOrderId = #{pOrderId,jdbcType=VARCHAR},",
          "buyerId = #{buyerId,jdbcType=INTEGER},",
          "consignee = #{consignee,jdbcType=VARCHAR},",
          "province = #{province,jdbcType=INTEGER},",
          "city = #{city,jdbcType=INTEGER},",
          "district = #{district,jdbcType=INTEGER},",
          "address = #{address,jdbcType=VARCHAR},",
          "tel = #{tel,jdbcType=VARCHAR},",
          "createTime = #{createTime,jdbcType=TIMESTAMP},",
          "updateTime = #{updateTime,jdbcType=TIMESTAMP}",
        "where orderId = #{orderId,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Order record);

    /**
     * 根据订单号获取订单对象，并加锁
     * @param orderId
     * @return
     * @author liupoyang
     */
    @Select("SELECT * FROM order_info WHERE orderId = #{orderId} for update")
    Order getOrderByIdForUpdate(String orderId);
}